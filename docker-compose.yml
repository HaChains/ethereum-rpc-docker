version: '3.1'

services:

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    ports:
      - "443:443"
      - "127.0.0.1:8080:8080"
    networks:
      - pocket
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # TESTING
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=sven@sven-holter.de"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  geth-goerli:
    image: ethereum/client-go:latest
    expose:
      - "8545"
      - "8546"
      - "30303"
    volumes:
      - geth-goerli:/.goerli
    command: "--goerli --http --http.api eth,net --http.addr 0.0.0.0 --http.port 8545 --http.vhosts=* --syncmode full --datadir .goerli --verbosity 3"
    networks:
      - pocket

  geth-rinkeby:
    image: ethereum/client-go:latest
    expose:
      - "8545"
      - "8546"
      - "30303"
    volumes:
      - geth-rinkeby:/.rinkeby
    command: "--rinkeby --http --http.api eth,net --http.addr 0.0.0.0 --http.port 8545 --http.vhosts=* --syncmode full --datadir .rinkeby --verbosity 3"
    networks:
      - pocket

  geth-ropsten:
    image: ethereum/client-go:latest
    expose:
      - "8545"
      - "8546"
      - "30303"
    volumes:
      - geth-ropsten:/.ropsten
    command: "--ropsten --http --http.api eth,net --http.addr 0.0.0.0 --http.port 8545 --http.vhosts=* --syncmode full --datadir .ropsten --verbosity 3"
    networks:
      - pocket

  geth-mainnet:
    image: ethereum/client-go:latest
    expose:
      - "8545"
      - "8546"
      - "30303"
    volumes:
      - geth-mainnet:/.mainnet
    command: "--http  --http.api eth,net --http.addr 0.0.0.0 --http.port 8545 --http.vhosts=* --syncmode full --datadir .mainnet --verbosity 3"
    networks:
      - pocket

  erigon-trace:
    image: thorax/erigon
    expose:
    - "30303"
    - "30304"
    volumes:
      - erigon-trace:/home/erigon/.local/share/erigon
    command: erigon --chain mainnet --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 --private.api.addr=0.0.0.0:9090 --pprof --pprof.addr=0.0.0.0 --pprof.port=6061
    networks:
      - pocket

  rpcdaemon:
    image: thorax/erigon:latest
    command: rpcdaemon --datadir=/home/erigon/.local/share/erigon --private.api.addr=erigon:9090 --txpool.api.addr=erigon:9090 --http.addr=0.0.0.0 --http.vhosts=* --http.corsdomain=* --http.api=eth,debug,net,trace --ws
    pid: service:erigon-trace # Use erigon's PID namespace. It's required to open Erigon's DB from another process (RPCDaemon local-mode)
    volumes:
      - erigon-trace:/home/erigon/.local/share/erigon
    expose:
      - "8545"
    restart: unless-stopped

  avalanche:
    image: avaplatform/avalanchego
    expose:
      - "8545"
      - "8546"
      - "30303"
    volumes:
      - avalanche:/root/.avalanche
    command: "/avalanchego/build/avalanchego --http-host="
    networks:
      - pocket

  pocket-testnet:
    image: poktnetwork/pocket-core:stagenet-latest
    ports:
      - "127.0.0.1:8082:8081"
      - "127.0.0.1:26657:26656"
    expose:
      - 26656
      - 8081
    command:  pocket start --seeds=$POCKET_TEST_SEEDS --testnet
    #command: pocket start --simulateRelay
    environment:
      - POCKET_CORE_KEY=$POCKET_CORE_KEY_TEST
      - POCKET_CORE_PASSPHRASE=$POCKET_CORE_PASSPHRASE_TEST
    volumes:
      - ./chains/chains_testnet.json:/home/app/.pocket/config/chains.json
      - pocket-testnet:/home/app/.pocket
    networks:
      - pocket

  pocket-mainnet:
    image: poktnetwork/pocket-core:stagenet-latest
    ports:
      - "127.0.0.1:8081:8081"
      - "127.0.0.1:26656:26656"
    expose:
      - 26656
      - 8081
    command: /home/app/.pocket/pokt_mainnet.sh && pocket start --seeds=$POCKET_MAIN_SEEDS --mainnet
    #command: pocket start --simulateRelay
    environment:
      - POCKET_CORE_KEY=$POCKET_CORE_KEY
      - POCKET_CORE_PASSPHRASE=$POCKET_CORE_PASSPHRASE
    volumes:
      - ./chains/chains_mainnet.json:/home/app/.pocket/config/chains.json
      - ./bootstrap_skript/pokt_mainnet.sh:/home/app/.pocket/pokt_mainnet.sh
      - pocket-mainnet:/home/app/.pocket
    networks:
      - pocket
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.myservice.loadbalancer.server.port=8081"
      - "traefik.http.routers.pocket-mainnet.rule=Host(`bsc-1.stakesquid-db.ml`)"
      - "traefik.http.routers.pocket-mainnet.entrypoints=websecure"
      - "traefik.http.routers.pocket-mainnet.tls.certresolver=myresolver"

volumes:
  geth-goerli:
  geth-rinkeby:
  geth-ropsten:
  geth-mainnet:
  erigon-trace:
  avalanche:
  pocket-testnet:
  pocket-mainnet:

networks:
  pocket:
    driver: bridge