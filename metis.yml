version: "3.1"

services:
  metis-dtl:
    image: metisdao/data-transport-layer:20230713210754
    restart: unless-stopped
    stop_grace_period: 30s
    environment:
      URL: https://metisprotocol.github.io/metis-networks/andromeda-mainnet/addresses.json
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: "${METIS_L1_RPC:-https://eth.llamarpc.com}"
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: "https://andromeda.metis.io/?owner=1088"
      DATA_TRANSPORT_LAYER__SYNC_FROM_L1: "false"
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: "true"
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: "1088"
      DATA_TRANSPORT_LAYER__DB_PATH: /data/db
      DATA_TRANSPORT_LAYER__SERVER_PORT: "7878"
      DATA_TRANSPORT_LAYER__TRANSACTIONS_PER_POLLING_INTERVAL: "1000"
      DATA_TRANSPORT_LAYER__CONFIRMATIONS: "0"
      DATA_TRANSPORT_LAYER__POLLING_INTERVAL: "100"
      DATA_TRANSPORT_LAYER__LOGS_PER_POLLING_INTERVAL: "2000"
      DATA_TRANSPORT_LAYER__DANGEROUSLY_CATCH_ALL_ERRORS: "true"
      DATA_TRANSPORT_LAYER__SERVER_HOSTNAME: "0.0.0.0"
    expose:
      - 7878
    volumes:
      - metis-dtl:/data
    healthcheck:
      test: ["CMD-SHELL", "curl http://127.0.0.1:7878"]
      interval: 5s
      timeout: 3s
      retries: 6
    networks:
      - chains

  metis:
    image: metisdao/l2geth:20230713220744
    entrypoint: ["sh", "/scripts/geth.sh"]
    restart: unless-stopped
    stop_grace_period: 2m
    env_file:
      - ./metis/geth.env
    depends_on:
      - metis-dtl
    healthcheck:
      test: ["CMD-SHELL", "curl http://127.0.0.1:8545"]
      interval: 5s
      timeout: 3s
      retries: 6
    environment:
      L2GETH_GENESIS_URL: https://metisprotocol.github.io/metis-networks/andromeda-mainnet/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://metis-dtl:7878
      L2_URL: https://andromeda.metis.io
      SEQUENCER_CLIENT_HTTP: https://andromeda.metis.io
      ETH1_CTC_DEPLOYMENT_HEIGHT: 13626959
      CHAIN_ID: 1088
      NETWORK_ID: 1088
      TARGET_GAS_LIMIT: 1100000000
    volumes:
      - metis:/root/.ethereum
      - ./metis/scripts:/scripts
    expose:
      - 8546
      - 8545
    networks:
      - chains

  metis-proxy:         
    restart: unless-stopped           
    image: nginx
    depends_on:
      - metis
    expose:  
      - 80                                                                                            
    environment:                                                                                      
      PROXY_HOST: metis
      RPC_PORT: 8545            
      WS_PORT: 8546                     
    networks:               
      - chains 
    volumes:               
      - ./nginx-proxy:/etc/nginx/templates      
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.metis-stripprefix.stripprefix.prefixes=/metis"
      - "traefik.http.services.metis.loadbalancer.server.port=80"
      - "traefik.http.routers.metis.entrypoints=websecure"
      - "traefik.http.routers.metis.tls.certresolver=myresolver"
      - "traefik.http.routers.metis.rule=Host(`$DOMAIN`) && PathPrefix(`/metis`)"
      - "traefik.http.routers.metis.middlewares=metis-stripprefix, ipwhitelist"

volumes:
  metis:
  metis-dtl:
